numpy is faster than list because storage of memory in one thing.

np array is of same data type

import numpy as np
print(np.array([1,2,3,4,5],dtype=float))    ------   [1. 2. 3. 4. 5.]
print(np.ones(5,dtype=float))               ------   [1. 1. 1. 1. 1.]
print(np.zeros(4,dtype=float))              ------   [0. 0. 0. 0.]
print(np.full(10,5,dtype=float))            ------   [5. 5. 5. 5. 5. 5. 5. 5. 5. 5.]
print(np.linspace(1,5,10))                  ------   [1.         1.44444444 1.88888889 2.33333333 2.77777778 3.22222222 3.66666667 4.11111111 4.55555556 5.        ]
print(np.arange(1,10))                      ------   [1 2 3 4 5 6 7 8 9]
print(np.random.random(5))                  ------   [0.18405713 0.62143092 0.86577673 0.34615458 0.80621751]
print(np.empty(3))                          ------   [0.75 0.75 0.  ]

array-properties:

a=np.array([[1,2,3],[4,5,6]])
print(a.size)  --- 6
print(a.shape) --- (2,3)
print(a.ndim)  --- 2

print(np.ones([3,3],dtype=int)) ---[[1 1 1]
                                    [1 1 1]
                                    [1 1 1]] 

order is also given to the ones np like Order="c" or order = "f" means to store a value in which format c language or forton language.


identity matrix:

print(np.eye(2,3)) -- [[1. 0. 0.]
 [0. 1. 0.]]

diagonal matrix:

print(np.diag((2,3,4))) -- [[2 0 0]
 [0 3 0]
 [0 0 4]]


